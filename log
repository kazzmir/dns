This is a project to implement a DNS server and learn rust at the same time. I know very little about rust, so I expect quite a bit of pain in the beginning of the project. I know a bit about DNS, but hopefully by implementing a server I will learn much more. The things I currently know about DNS are:

 * servers opens a UDP socket on port 53
 * IPV4 queries use the A record
 * IPV6 queries use the AAAA record
 * email (smtp?) queries use the MX recordd
 * and there are some other records, like NS and CNAME, that I'm not exactly sure what they do

A client sends a UDP packet to the server that contains a query, which consists of a hostname to resolve and probably other information. If the DNS server doesn't have the information on hand then it will send the query to an upstream provider, either the router on the local network or to something more authoritative like an ISP or one of the many public servers such as Google's 8.8.8.8.

My goals for the very beginning of the project are:
  * get a working rust environment
  * open UDP port 53, be able to parse the input

Observations:
  * rust naming conventions are annoying to me. 'fn' for functions, files end with '.rs'. Laziness is not a virtue.
  * googling for 'rust open a port' shows me a bunch of stuff for some game called 'rust'. Hopefully searching for the rust language related things won't become too annoying.
  * back to putting ; at the end of lines. I have become pretty used to leaving them off since I do a lot of programming in python, go, and swift. I dislike ;
  * the rust compiler complains if functions are not named using snake case, a bit surprising 
  * I successfully got a UDP server up and running without too much pain. So far so good!
  * Testing the server is easy:

$ echo hi > /dev/udp/127.0.0.1/5553

Apparently /dev/udp is a bash thing, its not a real entry in the filesystem.
